name: On merge
on:
    push:
        branches: main

jobs:
    static-analysis:
        name: Static Analysis
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Install dependencies
              shell: bash
              run: npm install
            - name: Run linter
              shell: bash
              run: npm run lint
    test:
      needs: static-analysis
      name: Unit test
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v4
          - name: Install dependencies
            shell: bash
            run: npm install
          - name: Run tests
            shell: bash
            run: npm run test:ci
          - uses: actions/upload-artifact@v4
            with:
              name: unit-test-report
              path: ./html
    build:
        needs: static-analysis
        name: build the project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Login to docker
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Build the docker image
              uses: docker/build-push-action@v2
              with:
                context: .
                file: ./Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_USERNAME }}/devops_front:latest
    test-e2e:
      needs: build
      name: E2E test
      runs-on: ubuntu-latest
      services:
          db:
            image: postgres:17.2
            ports:
              - "5432:5432"
            volumes:
              - db_data:/var/lib/postgresql/data
          api:
            image: baguette42/devops_back:latest
            env:
              DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@db:5432/${{ secrets.POSTGRES_DB }}
              DB_HOST: db
              DB_PORT: 5432
              DB_NAME: ${{ secrets.POSTGRES_DB }}
              DB_USER: ${{ secrets.POSTGRES_USER }}
              DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            ports:
              - "8000:8000"
          web:
            image: baguette42/devops_front:latest
            env:
              VITE_BACKEND_API: http://api:8000
            ports:
              - "80:80"
      steps:
          - uses: actions/checkout@v4
          - name: Go to tests folder and install dependencies
            run: |
              cd tests
              npm install
          - name: Run e2e tests
            run: |
              cd tests
              npm run e2e:ci